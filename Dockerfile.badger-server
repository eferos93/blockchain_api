# Dockerfile for BadgerDB Keystore Service
FROM golang:1.21-alpine AS builder

# Install necessary packages
RUN apk add --no-cache git

# Set working directory
WORKDIR /app

# Copy go mod files
COPY go.mod go.sum ./

# Download dependencies
RUN go mod download

# Copy source code
COPY . .

# Build the BadgerDB server
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo -o badger-server ./cmd/badger-server

# Final stage
FROM alpine:latest

# Install ca-certificates for HTTPS requests
RUN apk --no-cache add ca-certificates

# Create app directory and data directory
RUN mkdir -p /app /data

# Set working directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/badger-server .

# Create non-root user
RUN addgroup -g 1001 appgroup && \
    adduser -D -u 1001 -G appgroup appuser && \
    chown -R appuser:appgroup /app /data

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Environment variables with defaults
ENV BADGER_DB_PATH=/data/badger-keystore \
    BADGER_MASTER_PASSWORD=defaultPassword \
    BADGER_API_KEY=default-api-key \
    PORT=8080

# Start the server
CMD ["./badger-server"]
